name: Better C++ Exporter Tests

on:
  push:
  pull_request:
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  bats-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Test against multiple Ubuntu versions and Ghidra versions for broader compatibility
        os: [ubuntu-22.04, ubuntu-24.04]
        ghidra_version: ["11.3.2"]
      fail-fast: false  # Continue testing other versions even if one fails
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: 'true'
        
    - name: Verify examples/ls
      run: file examples/ls | fgrep "ELF"

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Verify test files
      run: |
        ls -la examples/
        file examples/ls
        xxd -l 32 examples/ls  # Show first 32 bytes in hex
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y bats build-essential gcc p7zip-full
        
    - name: Download Ghidra ${{ matrix.ghidra_version }}
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "NationalSecurityAgency/ghidra"
        tag: "Ghidra_${{ matrix.ghidra_version }}_build"
        fileName: "ghidra*.zip"
        
    - name: Unzip Ghidra ${{ matrix.ghidra_version }}
      run: |
        7z x ghidra_${{ matrix.ghidra_version }}_*.zip
        sudo mv ghidra_${{ matrix.ghidra_version }}_PUBLIC /opt/ghidra
        sudo chmod +x /opt/ghidra/ghidraRun
        sudo chmod +x /opt/ghidra/support/analyzeHeadless
        echo "GHIDRA_INSTALL_DIR=/opt/ghidra" >> $GITHUB_ENV
        
    - name: Verify Ghidra installation
      run: |
        /opt/ghidra/support/analyzeHeadless -help || true
        ls -la /opt/ghidra/support/
        
    - name: Check test prerequisites
      run: |
        ./tests/run_tests.sh --check
        
    - name: Run all tests
      run: |
        ./tests/run_tests.sh --output /tmp all

    - name: Upload test results
      uses: pcolby/tap-summary@v1
      if: always()
      with:
        path: /tmp/report.tap
        
    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts-${{ matrix.os }}
        path: |
          /tmp/bats-run-*
          /tmp/ghidra*
        retention-days: 3

